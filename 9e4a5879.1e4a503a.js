(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{89:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return d}));var r=n(3),a=n(7),c=(n(0),n(98)),o={id:"redux-setup",title:"Setup"},i={unversionedId:"redux-setup",id:"redux-setup",isDocsHomePage:!1,title:"Setup",description:"With configureStore we get hold of the global store object.",source:"@site/docs/redux-setup.md",slug:"/redux-setup",permalink:"/docs/redux-setup",editUrl:"https://github.com/spierala/mini-rx-store/edit/master/docs/docs/redux-setup.md",version:"current",sidebar:"docs",previous:{title:"Redux",permalink:"/docs/redux"},next:{title:"Actions",permalink:"/docs/actions"}},u=[{value:"No Setup",id:"no-setup",children:[]},{value:"Feature Reducers",id:"feature-reducers",children:[{value:"Add Feature Reducers dynamically",id:"add-feature-reducers-dynamically",children:[]}]},{value:"Initial State",id:"initial-state",children:[]},{value:"Meta reducers",id:"meta-reducers",children:[]}],s={toc:u};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"With ",Object(c.b)("inlineCode",{parentName:"p"},"configureStore")," we get hold of the global store object.\nAt the same time we can pass a configuration to initialize our feature reducers, meta reducers, initial state and extensions."),Object(c.b)("h2",{id:"no-setup"},"No Setup"),Object(c.b)("p",null,"At first, we do not need any configuration to get started."),Object(c.b)("p",null,"Let`s just get hold of the store instance:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"import { configureStore, Store } from 'mini-rx-store';\n\nconst store: Store = configureStore({});\n")),Object(c.b)("p",null,"With the ",Object(c.b)("inlineCode",{parentName:"p"},"store")," instance we can already add reducers (dynamically), select state, dispatch actions and create effects."),Object(c.b)("h2",{id:"feature-reducers"},"Feature Reducers"),Object(c.b)("p",null,"We can configure the feature reducers via the configuration object. The reducers will be ready at store initialization."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"import { configureStore, Store } from 'mini-rx-store';\nimport productReducer from './product-reducer';\nimport userReducer from './user-reducer';\n\nconst store: Store = configureStore({\n  reducers: {\n    product: productReducer,\n    user: userReducer\n  }\n});\n")),Object(c.b)("h3",{id:"add-feature-reducers-dynamically"},"Add Feature Reducers dynamically"),Object(c.b)("p",null,"It is possible to add feature reducers dynamically later like this:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"import todoReducer from './todo-reducer';\n\nstore.feature('todo', todoReducer);\n")),Object(c.b)("h2",{id:"initial-state"},"Initial State"),Object(c.b)("p",null,"We can set the initial state of the store via the configuration object. The initial state keys must match the provided reducer keys:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"import { configureStore, Store } from 'mini-rx-store';\nimport counterReducer from './counter-reducer';\n\nconst store: Store = configureStore({\n  reducers: {\n    product: productReducer,\n    user: userReducer\n  },\n  initialState: {\n    product: {},\n    user: {}\n  }\n});\n")),Object(c.b)("p",null,"See how the initial state is available in a feature reducer:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"import { Action, Store, configureStore } from 'mini-rx-store';\n\ninterface CounterState {\n  count: number;\n}\n\n// Reducer\nfunction counterReducer(state: CounterState, action: Action): CounterState {\n  switch (action.type) {\n    case 'inc':\n      return {\n        ...state,\n        count: state.count + 1\n      };\n    default:\n      return state;\n  }\n}\n\n// Configure the store\nconst store: Store = configureStore({\n  reducers: {\n    counter: counterReducer\n  },\n  initialState: {\n    counter: {count: 123} \n  }\n});\n\n// Select global state\nstore.select(state => state).subscribe(console.log);\n\n// Dispatch the 'increment' action\nstore.dispatch({ type: 'inc' });\n\n// OUTPUT: {'counter':{'count':123}}\n// OUTPUT: {'counter':{'count':124}}\n")),Object(c.b)("h2",{id:"meta-reducers"},"Meta reducers"),Object(c.b)("p",null,'Meta reducers are executed before the "normal" feature reducers.\nWith meta reducers we can pre-process actions and state.'),Object(c.b)("div",{className:"admonition admonition-info alert alert--info"},Object(c.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(c.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(c.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},"Most MiniRx Extensions like the Undo Extension, Logger Extension or the Immutable Extension are implemented with a meta reducer."))),Object(c.b)("p",null,"A meta reducer is a function which takes a reducer and returns a new reducer."),Object(c.b)("p",null,"Let's see how to implement a simple Debug meta reducer:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"export function debug(reducer) {\n  return function newReducer(state, action) {\n    const nextState = reducer(state, action);\n    console.log('state', state);\n    console.log('action', action);\n    console.log('next state', nextState);\n    return nextState;\n  }\n}\n")),Object(c.b)("p",null,"Now we can add the ",Object(c.b)("inlineCode",{parentName:"p"},"debug")," meta reducer to the ",Object(c.b)("inlineCode",{parentName:"p"},"metaReducers")," array of the configuration object:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"const store: Store = configureStore({\n  // reducers: {...},\n  // initialState: {...},\n  metaReducers: [debug]\n});\n")),Object(c.b)("p",null,'You can add many meta reducers to the array. The meta reducers will be executed from "left to right".'))}d.isMDXComponent=!0},98:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),d=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=d(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),l=d(n),b=r,m=l["".concat(o,".").concat(b)]||l[b]||p[b]||c;return n?a.a.createElement(m,i(i({ref:t},s),{},{components:n})):a.a.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=b;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<c;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);