(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{100:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,b=d["".concat(i,".").concat(m)]||d[m]||p[m]||a;return n?o.a.createElement(b,s(s({ref:t},l),{},{components:n})):o.a.createElement(b,s({ref:t},l))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},78:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(3),o=(n(0),n(100));const a={id:"angular",title:"Angular Integration",sidebar_label:"Angular Integration"},i={unversionedId:"angular",id:"angular",isDocsHomePage:!1,title:"Angular Integration",description:"mini-rx-store-ng is a package for better Angular Integration.",source:"@site/docs/angular.md",slug:"/angular",permalink:"/mini-rx-store/docs/angular",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/angular.md",version:"current",sidebar_label:"Angular Integration",sidebar:"docs",previous:{title:"Logger Extension",permalink:"/mini-rx-store/docs/ext-logger"}},s=[{value:"Usage",id:"usage",children:[{value:"Installation:",id:"installation",children:[]},{value:"Configure the Store in the App Module",id:"configure-the-store-in-the-app-module",children:[]},{value:"Register Feature States in Angular Feature Modules",id:"register-feature-states-in-angular-feature-modules",children:[]},{value:"Register Effects",id:"register-effects",children:[]},{value:"Get hold of the store and actions via the Angular Dependency Injection",id:"get-hold-of-the-store-and-actions-via-the-angular-dependency-injection",children:[]},{value:"Redux Dev Tools",id:"redux-dev-tools",children:[]}]}],c={toc:s};function l({components:e,...t}){return Object(o.b)("wrapper",Object(r.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.npmjs.com/package/mini-rx-store-ng"}),"mini-rx-store-ng")," is a package for better Angular Integration."),Object(o.b)("p",null,Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.npmjs.com/package/mini-rx-store-ng"}),Object(o.b)("img",Object(r.a)({parentName:"a"},{src:"https://badge.fury.io/js/mini-rx-store-ng.svg",alt:"npm version"})))),Object(o.b)("p",null,"With ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.npmjs.com/package/mini-rx-store-ng"}),"mini-rx-store-ng")," we can use MiniRx Store the Angular way:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"#configure-the-store-in-the-app-module"}),"Configure the store")," using ",Object(o.b)("inlineCode",{parentName:"li"},"StoreModule.forRoot()")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"#register-feature-states-in-angular-feature-modules"}),"Register Feature States")," using ",Object(o.b)("inlineCode",{parentName:"li"},"StoreModule.forFeature()")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"#register-effects"}),"Register Effects")," using ",Object(o.b)("inlineCode",{parentName:"li"},"EffectsModule.register()")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"#get-hold-of-the-store-and-actions-via-the-angular-dependency-injection"}),"Use Angular Dependency Injection")," for ",Object(o.b)("inlineCode",{parentName:"li"},"Store")," and ",Object(o.b)("inlineCode",{parentName:"li"},"Actions")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"#redux-dev-tools"}),"Redux Devtools Extension"))),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("h3",{id:"installation"},"Installation:"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"npm i mini-rx-store-ng")),Object(o.b)("h3",{id:"configure-the-store-in-the-app-module"},"Configure the Store in the App Module"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="app.module.ts"',title:'"app.module.ts"'}),"import { NgModule } from '@angular/core';\nimport { StoreModule } from 'mini-rx-store-ng';\n\n@NgModule({\n    imports: [\n        StoreModule.forRoot({\n            extensions: [\n                // Add extensions here\n                // new LoggerExtension()\n            ],\n            reducers: {\n                // Add root reducers here\n                // todo: todoReducer\n            },\n            metaReducers: [\n                // Add root meta reducers\n            ]\n        }),\n    ]\n})\nexport class AppModule {}\n")),Object(o.b)("h3",{id:"register-feature-states-in-angular-feature-modules"},"Register Feature States in Angular Feature Modules"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="todo.module.ts"',title:'"todo.module.ts"'}),"import { NgModule } from '@angular/core';\nimport { StoreModule } from 'mini-rx-store-ng';\nimport todoReducer from './todo-reducer';\n\n@NgModule({\n    imports: [\n        StoreModule.forFeature('todo', todoReducer),\n    ]\n})\nexport class TodoModule {\n    constructor() {}\n}\n")),Object(o.b)("h3",{id:"register-effects"},"Register Effects"),Object(o.b)("p",null,'Create an Angular service which holds all effects which belong to a Feature (e.g. "todo").'),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="todo-effects.service.ts"',title:'"todo-effects.service.ts"'}),"import { Injectable } from '@angular/core';\n\nimport { Actions, ofType } from 'mini-rx-store';\n\nimport { ajax } from 'rxjs/ajax';\nimport { mergeMap, map, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { LoadTodosFail, LoadTodosSuccess, TodoActionTypes } from './todo-actions';\n\n@Injectable({providedIn: 'root'})\nexport class TodoEffects {\n    loadTodos$ = this.actions$.pipe(\n        ofType(TodoActionTypes.LoadTodos),\n        mergeMap(() =>\n            ajax('https://jsonplaceholder.typicode.com/todos').pipe(\n                map(res => new LoadTodosSuccess(res.response)),\n                catchError(err => of(new LoadTodosFail(err)))\n            )\n        )\n    );\n\n    constructor(\n        private actions$: Actions\n    ) {\n    }\n}\n  \n")),Object(o.b)("p",null,"Register the Effects"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="todo.module.ts"',title:'"todo.module.ts"'}),"import { NgModule } from '@angular/core';\n\nimport { EffectsModule, StoreModule } from 'mini-rx-store-ng';\n\nimport { TodoEffects } from './todo-effects.service';\nimport { todoReducer } from './todo-reducer';\n\n@NgModule({\n    imports: [\n        StoreModule.forFeature('todo', todoReducer),\n        EffectsModule.register([TodoEffects]),\n    ]\n})\nexport class TodoModule {\n}\n")),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"register")," method from the EffectsModule accepts an array of classes with effects and can be used in both, root and feature modules."),Object(o.b)("h3",{id:"get-hold-of-the-store-and-actions-via-the-angular-dependency-injection"},"Get hold of the store and actions via the Angular Dependency Injection"),Object(o.b)("p",null,"After we registered the StoreModule in the AppModule we can use Angular DI to access ",Object(o.b)("inlineCode",{parentName:"p"},"Store")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Actions"),"."),Object(o.b)("p",null,"For example in a component:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"import { Component } from '@angular/core';\nimport { Store } from 'mini-rx-store';\nimport { Observable } from 'rxjs';\nimport { Actions } from './models';\n\n@Component({\n    selector: 'my-component',\n    template: ''\n})\nexport class MyComponent {\n    // Select state from the Store\n    someState$: Observable<any> = this.store.select(state => state);\n\n    constructor(\n        private store: Store,\n    ) {\n        \n    }\n\n    doSomething() {\n        this.store.dispatch({type: 'some action'})\n    }\n}\n")),Object(o.b)("h3",{id:"redux-dev-tools"},"Redux Dev Tools"),Object(o.b)("p",null,"Small wrapper for the ReduxDevtoolsExtension from 'mini-rx-store'.\nIt is needed to trigger Angular Change Detection when using time travel in the Redux Dev Tools Browser PlugIn."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"import { StoreDevtoolsModule } from 'mini-rx-store-ng';\n\n@NgModule({\n    imports: [\n        // ...\n        StoreDevtoolsModule.instrument({\n            name: 'MiniRx Store',\n            maxAge: 25,\n            latency: 250,\n        }),\n    ]\n})\nexport class AppModule {} \n")))}l.isMDXComponent=!0}}]);