(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{100:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),l=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=l(n),b=r,m=p["".concat(a,".").concat(b)]||p[b]||d[b]||i;return n?o.a.createElement(m,c(c({ref:t},s),{},{components:n})):o.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=b;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return a})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return s}));var r=n(3),o=(n(0),n(100));const i={id:"setup",title:"Setup"},a={unversionedId:"setup",id:"setup",isDocsHomePage:!1,title:"Setup",description:"MiniRx Store requires only a minimum of configuration to get started.",source:"@site/docs/setup.md",slug:"/setup",permalink:"/mini-rx-store/docs/setup",editUrl:"https://github.com/spierala/mini-rx-store/edit/master/docs/docs/setup.md",version:"current",sidebar:"docs",previous:{title:"Installation",permalink:"/mini-rx-store/docs/"},next:{title:"Redux",permalink:"/mini-rx-store/docs/redux"}},c=[{value:"No Setup",id:"no-setup",children:[]},{value:"Redux Setup",id:"redux-setup",children:[]},{value:"Extensions",id:"extensions",children:[]}],u={toc:c};function s({components:e,...t}){return Object(o.b)("wrapper",Object(r.a)({},u,t,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,"MiniRx Store requires only a minimum of configuration to get started."),Object(o.b)("h2",{id:"no-setup"},"No Setup"),Object(o.b)("p",null,"The most basic setup is no setup... we can pass an empty configuration to ",Object(o.b)("inlineCode",{parentName:"p"},"configureStore"),"\nand get hold of the Store instance."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"import { configureStore, Store } from 'mini-rx-store';\n\nconst store: Store = configureStore({});\n")),Object(o.b)("p",null,"With the ",Object(o.b)("inlineCode",{parentName:"p"},"store")," instance we can already add reducers (dynamically), select state, dispatch actions and create effects."),Object(o.b)("h2",{id:"redux-setup"},"Redux Setup"),Object(o.b)("p",null,"Read ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"redux-setup"}),'"Redux" Store Setup')," to see the Redux related configuration options."),Object(o.b)("h2",{id:"extensions"},"Extensions"),Object(o.b)("p",null,"We can add extensions to the Store config to add additional functionality."),Object(o.b)("p",null,"Currently, these extensions are included in MiniRx:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Redux Dev Tools Extension: Inspect state with the Redux Dev Tools"),Object(o.b)("li",{parentName:"ul"},"Immutable Extension: Enforce state immutability"),Object(o.b)("li",{parentName:"ul"},"Undo Extension: Undo dispatched actions"),Object(o.b)("li",{parentName:"ul"},"Logger Extension: console.log the current action and updated state")),Object(o.b)("p",null,"Example: Add the LoggerExtension"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"import { LoggerExtension } from 'mini-rx-store';\n\nconst store: Store = configureStore({\n    extensions: [new LoggerExtension()]\n});\n")))}s.isMDXComponent=!0}}]);