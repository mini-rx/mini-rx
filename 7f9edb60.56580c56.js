(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{100:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return b}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=o.a.createContext({}),s=function(e){var t=o.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=s(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),l=s(r),f=n,b=l["".concat(i,".").concat(f)]||l[f]||d[f]||a;return r?o.a.createElement(b,c(c({ref:t},p),{},{components:r})):o.a.createElement(b,c({ref:t},p))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=f;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},85:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return a})),r.d(t,"metadata",(function(){return i})),r.d(t,"toc",(function(){return c})),r.d(t,"default",(function(){return p}));var n=r(3),o=(r(0),r(100));const a={id:"fs-setup",title:"Create a FeatureStore",sidebar_label:"Setup",slud:"/feature-store-setup"},i={unversionedId:"fs-setup",id:"fs-setup",isDocsHomePage:!1,title:"Create a FeatureStore",description:"There are 2 Options to create a new FeatureStore.",source:"@site/docs/fs-setup.md",slug:"/fs-setup",permalink:"/mini-rx-store/docs/fs-setup",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/fs-setup.md",version:"current",sidebar_label:"Setup",sidebar:"docs",previous:{title:"Feature Store",permalink:"/mini-rx-store/docs/fs-quick-start"},next:{title:"Update State",permalink:"/mini-rx-store/docs/update-feature-state"}},c=[{value:"Option 1: Extend <code>FeatureStore</code>",id:"option-1-extend-featurestore",children:[]},{value:"Option2 : Functional creation method",id:"option2--functional-creation-method",children:[]}],u={toc:c};function p({components:e,...t}){return Object(o.b)("wrapper",Object(n.a)({},u,t,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,"There are 2 Options to create a new FeatureStore."),Object(o.b)("h3",{id:"option-1-extend-featurestore"},"Option 1: Extend ",Object(o.b)("inlineCode",{parentName:"h3"},"FeatureStore")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts",metastring:'title="todo-feature-store.ts"',title:'"todo-feature-store.ts"'}),'import { FeatureStore } from "mini-rx-store";\nimport { Todo } from "./todo";\n\nexport interface TodoState {\n    todos: Todo[];\n    selectedTodoId: number\n}\n\nexport const initialState: TodoState = {\n    todos: [],\n    selectedTodoId: undefined\n};\n\nexport class TodoFeatureStore extends FeatureStore<TodoState> {\n    constructor() {\n        super(\'todo\', initialState)\n    }\n}\n')),Object(o.b)("p",null,"Extending the ",Object(o.b)("inlineCode",{parentName:"p"},"FeatureStore")," requires to pass the feature key (e.g. 'todo') and the initial state.\nWe have to provide a TypeScript interface to ",Object(o.b)("inlineCode",{parentName:"p"},"FeatureStore")," to get type safety: ",Object(o.b)("inlineCode",{parentName:"p"},"FeatureStore<TodoState>"),"."),Object(o.b)("h3",{id:"option2--functional-creation-method"},"Option2 : Functional creation method"),Object(o.b)("p",null,"We can create a FeatureStore with ",Object(o.b)("inlineCode",{parentName:"p"},"createFeatureStore")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"const todoFs: FeatureStore<TodoState> = createFeatureStore<TodoState>('todo', initialState);\n")),Object(o.b)("p",null,"The following examples will be based on Option 1 (Extend)."))}p.isMDXComponent=!0}}]);