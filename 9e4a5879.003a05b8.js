(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{100:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return b}));var n=r(0),o=r.n(n);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function u(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?u(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):u(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=p(r),f=n,b=d["".concat(u,".").concat(f)]||d[f]||l[f]||c;return r?o.a.createElement(b,a(a({ref:t},s),{},{components:r})):o.a.createElement(b,a({ref:t},s))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,u=new Array(c);u[0]=f;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a.mdxType="string"==typeof e?e:n,u[1]=a;for(var s=2;s<c;s++)u[s]=r[s];return o.a.createElement.apply(null,u)}return o.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},90:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return u})),r.d(t,"metadata",(function(){return a})),r.d(t,"toc",(function(){return i})),r.d(t,"default",(function(){return p}));var n=r(3),o=r(7),c=(r(0),r(100)),u={id:"redux-setup",title:"Setup"},a={unversionedId:"redux-setup",id:"redux-setup",isDocsHomePage:!1,title:"Setup",description:"With configureStore we get hold of the global Store object.",source:"@site/docs/redux-setup.md",slug:"/redux-setup",permalink:"/docs/redux-setup",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/redux-setup.md",version:"current",sidebar:"docs",previous:{title:"Redux",permalink:"/docs/redux"},next:{title:"Actions",permalink:"/docs/actions"}},i=[{value:"No Setup",id:"no-setup",children:[]},{value:"Root Reducers",id:"root-reducers",children:[]}],s={toc:i};function p(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"With ",Object(c.b)("inlineCode",{parentName:"p"},"configureStore")," we get hold of the global Store object.\nAt the same time we can pass a configuration to initialize our Root Reducers, Root Meta Reducers, initial state and extensions."),Object(c.b)("h2",{id:"no-setup"},"No Setup"),Object(c.b)("p",null,"At first we do not need any configuration to get started."),Object(c.b)("p",null,"Let`s just get hold of the Store instance:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"import { configureStore, Store } from 'mini-rx-store';\n\nconst store: Store = configureStore({});\n")),Object(c.b)("p",null,"We can add feature reducers dynamically later like this:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"import todoReducer from './todo-reducer';\n\nstore.feature('todo', todoReducer);\n")),Object(c.b)("h2",{id:"root-reducers"},"Root Reducers"),Object(c.b)("p",null,"If we need the feature reducers to be ready at Store initialization then we can pass them with the config object."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"import { configureStore, Store } from 'mini-rx-store';\nimport productReducer from './product-reducer';\nimport userReducer from './user-reducer';\n\nconst store: Store = configureStore({\n    reducers: {\n        product: productReducer,\n        user: userReducer\n    }\n});\n")))}p.isMDXComponent=!0}}]);