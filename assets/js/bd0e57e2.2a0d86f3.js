"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[305],{3133:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"actions","title":"Actions","description":"Actions represent unique events in our application. Reducer functions will process the actions in order to update state.","source":"@site/docs/actions.md","sourceDirName":".","slug":"/actions","permalink":"/docs/actions","draft":false,"unlisted":false,"editUrl":"https://github.com/spierala/mini-rx-store/edit/master/docs/docs/actions.md","tags":[],"version":"current","frontMatter":{"id":"actions","title":"Actions","sidebar_label":"Actions","slug":"/actions"},"sidebar":"docs","previous":{"title":"Redux Setup","permalink":"/docs/redux-setup"},"next":{"title":"Reducers","permalink":"/docs/reducers"}}');var s=n(4848),c=n(8453);const i={id:"actions",title:"Actions",sidebar_label:"Actions",slug:"/actions"},a=void 0,r={},d=[{value:"Action Creators",id:"action-creators",level:2},{value:"&quot;Classic&quot; Action Creators",id:"classic-action-creators",level:3},{value:"Class-based Action Creators (TypeScript)",id:"class-based-action-creators-typescript",level:3},{value:"Ts-action",id:"ts-action",level:3}];function l(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Actions represent unique events in our application. Reducer functions will process the actions in order to update state."}),"\n",(0,s.jsxs)(t.p,{children:["An action is a simple object with a ",(0,s.jsx)(t.code,{children:"type"})," property:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"const addTodo = {\n  type: 'ADD_TODO',\n  // Besides `type`, the structure of an action object is really up to you.\n  payload: 'Use Redux'\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Now we can dispatch the ",(0,s.jsx)(t.code,{children:"addTodo"})," action to the store and let the reducers calculate the new global state."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"store.dispatch(addTodo);\n"})}),"\n",(0,s.jsx)(t.h2,{id:"action-creators",children:"Action Creators"}),"\n",(0,s.jsx)(t.p,{children:'Of course, we do not want to create these action objects "by hand" when we need to dispatch an action.\nAction Creators will do the repetitive work for us.'}),"\n",(0,s.jsx)(t.h3,{id:"classic-action-creators",children:'"Classic" Action Creators'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"export function addTodo(payload) {\n  return {\n    type: 'ADD_TODO',\n    payload\n  }\n}\n"})}),"\n",(0,s.jsx)(t.p,{children:"Dispatch the action:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"store.dispatch(addTodo({id: 1, title: 'Use Redux'}));\n"})}),"\n",(0,s.jsx)(t.h3,{id:"class-based-action-creators-typescript",children:"Class-based Action Creators (TypeScript)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",metastring:'title="todo.ts"',children:"export interface Todo {\n  id: number;\n  title: string;\n}\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",metastring:'title="todo-actions.ts"',children:"import { Action } from 'mini-rx-store';\nimport { Todo } from './todo';\n\nexport enum TodoActionTypes {\n  AddTodo = 'ADD_TODO',\n  RemoveTodo = 'REMOVE_TODO'\n}\n\nexport class AddTodo implements Action {\n  readonly type = TodoActionTypes.AddTodo;\n  constructor(public payload: Todo) {}\n}\n\nexport class RemoveTodo implements Action {\n  readonly type = TodoActionTypes.RemoveTodo;\n  constructor(public payload: number) {}\n}\n\n// Union the valid types\nexport type TodoActions = AddTodo | RemoveTodo;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Dispatch the actions:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"store.dispatch(new AddTodo({id: 1, title: 'Use Redux'}));\n\nstore.dispatch(new RemoveTodo(1))\n"})}),"\n",(0,s.jsx)(t.p,{children:"The upcoming code examples use Class-based Action Creators."}),"\n",(0,s.jsx)(t.h3,{id:"ts-action",children:"Ts-action"}),"\n",(0,s.jsxs)(t.p,{children:["With ts-action you can create actions and reducers with a minimum of boilerplate code.\nRead more in the ",(0,s.jsx)(t.a,{href:"/docs/ts-action",children:"ts-action section"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var o=n(6540);const s={},c=o.createContext(s);function i(e){const t=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(c.Provider,{value:t},e.children)}}}]);