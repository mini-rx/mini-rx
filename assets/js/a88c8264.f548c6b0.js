"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[90],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=d(n),f=o,m=u["".concat(l,".").concat(f)]||u[f]||p[f]||r;return n?a.createElement(m,s(s({ref:t},c),{},{components:n})):a.createElement(m,s({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var d=2;d<r;d++)s[d]=n[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2875:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var a=n(7462),o=(n(7294),n(3905));const r={id:"fs-set-state",title:"Update State",sidebar_label:"Update State",slug:"/update-feature-state"},s=void 0,i={unversionedId:"fs-set-state",id:"fs-set-state",title:"Update State",description:"Use setState to update the state of a Feature Store right away.",source:"@site/docs/fs-set-state.md",sourceDirName:".",slug:"/update-feature-state",permalink:"/docs/update-feature-state",draft:!1,editUrl:"https://github.com/spierala/mini-rx-store/edit/master/docs/docs/fs-set-state.md",tags:[],version:"current",frontMatter:{id:"fs-set-state",title:"Update State",sidebar_label:"Update State",slug:"/update-feature-state"},sidebar:"docs",previous:{title:"Setup",permalink:"/docs/feature-store-setup"},next:{title:"Select",permalink:"/docs/select-feature-state"}},l={},d=[{value:"Undo setState Actions with <code>undo</code>",id:"undo-setstate-actions-with-undo",level:3}],c={toc:d};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Use ",(0,o.kt)("inlineCode",{parentName:"p"},"setState")," to update the state of a Feature Store right away.\n",(0,o.kt)("inlineCode",{parentName:"p"},"setState")," accepts a Partial Type. This allows us to pass only some properties of a bigger state interface."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-feature-store.ts"',title:'"todo-feature-store.ts"'},"selectTodo(id: number) {\n  this.setState({selectedTodoId: id});\n}\n")),(0,o.kt)("p",null,"Do you need to update the state based on the current state?\n",(0,o.kt)("inlineCode",{parentName:"p"},"setState")," accepts a callback function which gives you access to the current state."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-feature-store.ts"',title:'"todo-feature-store.ts"'},"// Update state based on current state\naddTodo(todo: Todo) {\n  this.setState(state => ({\n    todos: [...state.todos, todo]\n  }))\n}\n")),(0,o.kt)("p",null,"For better logging in the JS Console / Redux DevTools you can provide an optional name to the ",(0,o.kt)("inlineCode",{parentName:"p"},"setState")," function:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"this.setState({selectedTodoId: id}, 'selectTodo');\n")),(0,o.kt)("h3",{id:"undo-setstate-actions-with-undo"},"Undo setState Actions with ",(0,o.kt)("inlineCode",{parentName:"h3"},"undo")),(0,o.kt)("p",null,"We can easily undo ",(0,o.kt)("inlineCode",{parentName:"p"},"setState")," actions with the ",(0,o.kt)("a",{parentName:"p",href:"ext-undo-extension"},"Undo Extension")," installed."),(0,o.kt)("p",null,"Calling ",(0,o.kt)("inlineCode",{parentName:"p"},"setState")," returns an action which can be used to perform an Undo."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-feature-store.ts"',title:'"todo-feature-store.ts"'},"import { Action } from 'mini-rx-store';\n\nremoveTodo(id: number): Action {\n  return this.setState(state => ({\n    todos: state.todos.filter(item => item.id !== id)\n  }))\n}\n\nremoveAndUndo() {\n  const todoRemoveAction: Action = this.removeTodo(2);\n  this.undo(todoRemoveAction);   \n}\n")))}p.isMDXComponent=!0}}]);