"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[119],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,y=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return n?o.createElement(y,s(s({ref:t},p),{},{components:n})):o.createElement(y,s({ref:t},p))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:r,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5017:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var o=n(7462),r=(n(7294),n(3905));const a={id:"actions",title:"Actions",sidebar_label:"Actions",slug:"/actions"},s=void 0,i={unversionedId:"actions",id:"actions",title:"Actions",description:"Actions represent unique events in our application. Reducer functions will process the actions in order to update state.",source:"@site/docs/actions.md",sourceDirName:".",slug:"/actions",permalink:"/docs/actions",draft:!1,editUrl:"https://github.com/spierala/mini-rx-store/edit/master/docs/docs/actions.md",tags:[],version:"current",frontMatter:{id:"actions",title:"Actions",sidebar_label:"Actions",slug:"/actions"},sidebar:"docs",previous:{title:"Redux Setup",permalink:"/docs/redux-setup"},next:{title:"Reducers",permalink:"/docs/reducers"}},c={},l=[{value:"Action Creators",id:"action-creators",level:2},{value:"&quot;Classic&quot; Action Creators",id:"classic-action-creators",level:3},{value:"Class-based Action Creators (TypeScript)",id:"class-based-action-creators-typescript",level:3},{value:"Ts-action",id:"ts-action",level:3}],p={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Actions represent unique events in our application. Reducer functions will process the actions in order to update state."),(0,r.kt)("p",null,"An action is a simple object with a ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," property:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const addTodo = {\n  type: 'ADD_TODO',\n  // Besides `type`, the structure of an action object is really up to you.\n  payload: 'Use Redux'\n}\n")),(0,r.kt)("p",null,"Now we can dispatch the ",(0,r.kt)("inlineCode",{parentName:"p"},"addTodo")," action to the store and let the reducers calculate the new global state."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"store.dispatch(addTodo);\n")),(0,r.kt)("h2",{id:"action-creators"},"Action Creators"),(0,r.kt)("p",null,'Of course, we do not want to create these action objects "by hand" when we need to dispatch an action.\nAction Creators will do the repetitive work for us.'),(0,r.kt)("h3",{id:"classic-action-creators"},'"Classic" Action Creators'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export function addTodo(payload) {\n  return {\n    type: 'ADD_TODO',\n    payload\n  }\n}\n")),(0,r.kt)("p",null,"Dispatch the action:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"store.dispatch(addTodo({id: 1, title: 'Use Redux'}));\n")),(0,r.kt)("h3",{id:"class-based-action-creators-typescript"},"Class-based Action Creators (TypeScript)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo.ts"',title:'"todo.ts"'},"export interface Todo {\n  id: number;\n  title: string;\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-actions.ts"',title:'"todo-actions.ts"'},"import { Action } from 'mini-rx-store';\nimport { Todo } from './todo';\n\nexport enum TodoActionTypes {\n  AddTodo = 'ADD_TODO',\n  RemoveTodo = 'REMOVE_TODO'\n}\n\nexport class AddTodo implements Action {\n  readonly type = TodoActionTypes.AddTodo;\n  constructor(public payload: Todo) {}\n}\n\nexport class RemoveTodo implements Action {\n  readonly type = TodoActionTypes.RemoveTodo;\n  constructor(public payload: number) {}\n}\n\n// Union the valid types\nexport type TodoActions = AddTodo | RemoveTodo;\n")),(0,r.kt)("p",null,"Dispatch the actions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"store.dispatch(new AddTodo({id: 1, title: 'Use Redux'}));\n\nstore.dispatch(new RemoveTodo(1))\n")),(0,r.kt)("p",null,"The upcoming code examples use Class-based Action Creators."),(0,r.kt)("h3",{id:"ts-action"},"Ts-action"),(0,r.kt)("p",null,"With ts-action you can create actions and reducers with a minimum of boilerplate code.\nRead more in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/ts-action"},"ts-action section"),"."))}u.isMDXComponent=!0}}]);