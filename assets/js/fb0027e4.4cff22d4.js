"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[897],{1778:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"fs-config","title":"Local Component State with Feature Store","description":"With MiniRx Feature Stores you can also manage local component state.","source":"@site/docs/fs-config.md","sourceDirName":".","slug":"/fs-config","permalink":"/docs/fs-config","draft":false,"unlisted":false,"editUrl":"https://github.com/spierala/mini-rx-store/edit/master/docs/docs/fs-config.md","tags":[],"version":"current","frontMatter":{"id":"fs-config","title":"Local Component State with Feature Store","sidebar_label":"Local Component State"},"sidebar":"docs","previous":{"title":"Effects","permalink":"/docs/effects-for-feature-store"},"next":{"title":"Component Store","permalink":"/docs/component-store"}}');var r=n(4848),s=n(8453);const i={id:"fs-config",title:"Local Component State with Feature Store",sidebar_label:"Local Component State"},a=void 0,c={},l=[{value:"What is local component state?",id:"what-is-local-component-state",level:3},{value:"Multiple Feature Store instances",id:"multiple-feature-store-instances",level:3},{value:"Destroy",id:"destroy",level:2},{value:"Destroy in Svelte",id:"destroy-in-svelte",level:3},{value:"Automatic destroy in Angular",id:"automatic-destroy-in-angular",level:3},{value:"Destroy in other frameworks",id:"destroy-in-other-frameworks",level:3}];function u(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["With MiniRx Feature Stores you can also manage ",(0,r.jsx)(t.strong,{children:"local component state"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"what-is-local-component-state",children:"What is local component state?"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"State which is bound to a component"}),"\n",(0,r.jsx)(t.li,{children:"State which has the lifespan of a component"}),"\n",(0,r.jsx)(t.li,{children:"State which can exist multiple times (if the corresponding component exists multiple times)"}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"multiple-feature-store-instances",children:"Multiple Feature Store instances"}),"\n",(0,r.jsxs)(t.p,{children:["By default, a Feature Store with a certain feature key can only be created ",(0,r.jsx)(t.strong,{children:"once"}),".\nBut in order to manage local component state, you might need to create ",(0,r.jsx)(t.strong,{children:"multiple"})," instances of the same Feature Store."]}),"\n",(0,r.jsxs)(t.p,{children:["You can use the ",(0,r.jsx)(t.code,{children:"{multi: true}"})," configuration to allow multiple instances."]}),"\n",(0,r.jsx)(t.p,{children:"Example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { Observable } from 'rxjs';\nimport { FeatureStore } from 'mini-rx-store';\n\ninterface CounterState {\n  count: number;\n}\n\nconst initialState: CounterState = {\n  count: 42,\n};\n\nexport class CounterStore extends FeatureStore<CounterState> {\n  count$: Observable<number> = this.select((state) => state.count);\n\n  constructor() {\n    super('counter', initialState, { multi: true });\n  }\n\n  increment() {\n    this.setState(state => ({ count: state.count + 1 }), 'increment');\n  }\n\n  decrement() {\n    this.setState(state => ({ count: state.count - 1 }), 'decrement');\n  }\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["The code above defines a CounterStore with the ",(0,r.jsx)(t.code,{children:"{multi: true}"})," configuration.\nNow you can create many instances of the CounterStore."]}),"\n",(0,r.jsxs)(t.p,{children:["In the following screenshot from the ",(0,r.jsx)(t.a,{href:"https://angular-demo.mini-rx.io/#/counter",children:"Angular Demo"}),' you can see many Counter components.\nThe Redux DevTools indicate that MiniRx created four "counter" Feature Stores with unique feature keys.']}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Redux DevTools for MiniRx",src:n(3147).A+"",width:"1082",height:"514"})}),"\n",(0,r.jsx)(t.h2,{id:"destroy",children:"Destroy"}),"\n",(0,r.jsx)(t.p,{children:"When the component is destroyed, then you most likely want to destroy the corresponding Feature Store as well."}),"\n",(0,r.jsxs)(t.p,{children:["For that reason, ",(0,r.jsx)(t.code,{children:"FeatureStore"})," exposes the ",(0,r.jsx)(t.code,{children:"destroy"})," method."]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"destroy"})," method does two things:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"clean up all internal Observable subscriptions (e.g. from effects)"}),"\n",(0,r.jsx)(t.li,{children:"remove the corresponding feature state from the global state object"}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"destroy-in-svelte",children:"Destroy in Svelte"}),"\n",(0,r.jsxs)(t.p,{children:["Example: Call ",(0,r.jsx)(t.code,{children:"destroy"})," manually in Svelte"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { Observable } from 'rxjs';\nimport { FeatureStore } from 'mini-rx-store';\nimport { onDestroy } from 'svelte';\n\ninterface CounterState {\n  count: number;\n}\n\nconst initialState: CounterState = {\n  count: 42,\n};\n\nexport class CounterStore extends FeatureStore<CounterState> {\n  constructor() {\n    super('counter', initialState, {multi: true});\n    \n    onDestroy(() => {\n        this.destroy();\n    });\n  }\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["See the source from the ",(0,r.jsx)(t.a,{href:"https://github.com/spierala/mini-rx-svelte-demo/blob/master/frontend/src/modules/counter/components/state/counter-store.ts",children:"MiniRx Svelte Demo"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"automatic-destroy-in-angular",children:"Automatic destroy in Angular"}),"\n",(0,r.jsxs)(t.p,{children:["In Angular, you can provide a Feature Store on component level in the ",(0,r.jsx)(t.code,{children:"@Component"})," decorator like this:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"\nimport { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CounterStore } from '../state/counter-store.service';\n\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.css'],\n  providers: [CounterStore], // The CounterStore is provided for each counter component instance\n})\nexport class CounterComponent {\n  constructor(private counterStore: CounterStore) {}\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Now, the lifespan of the CounterStore is bound to the component lifespan.\nAngular will instantiate a CounterStore when a CounterComponent is created.\nAngular will also call the Feature Store ",(0,r.jsx)(t.code,{children:"destroy"})," method for us when the component is destroyed."]}),"\n",(0,r.jsxs)(t.p,{children:["The CounterStore itself is just an Angular Injectable (without the ",(0,r.jsx)(t.code,{children:"providedIn"})," config):"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"@Injectable()\nexport class CounterStore extends FeatureStore<CounterState> {\n  constructor() {\n    super('counter', initialState, { multi: true });\n  }\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["See the source from the ",(0,r.jsx)(t.a,{href:"https://github.com/spierala/mini-rx-store/blob/master/apps/mini-rx-angular-demo/src/app/modules/counter/state/counter-store.service.ts",children:"MiniRx Angular Demo"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"destroy-in-other-frameworks",children:"Destroy in other frameworks"}),"\n",(0,r.jsxs)(t.p,{children:["In other frameworks (or without a framework) you have to call the ",(0,r.jsx)(t.code,{children:"destroy"})," method manually, when the corresponding component is destroyed."]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},3147:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/local-component-state-mini-rx-eb1418884ec1383a4f0ca787ded4db58.png"},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var o=n(6540);const r={},s=o.createContext(r);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);