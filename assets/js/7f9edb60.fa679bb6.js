"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[875],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(r),f=o,m=d["".concat(u,".").concat(f)]||d[f]||c[f]||a;return r?n.createElement(m,i(i({ref:t},l),{},{components:r})):n.createElement(m,i({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1158:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={id:"fs-setup",title:"Create a Feature Store",sidebar_label:"Setup",slug:"/feature-store-setup"},i=void 0,s={unversionedId:"fs-setup",id:"fs-setup",title:"Create a Feature Store",description:"There are 2 Options to create a new Feature Store.",source:"@site/docs/fs-setup.md",sourceDirName:".",slug:"/feature-store-setup",permalink:"/docs/feature-store-setup",draft:!1,editUrl:"https://github.com/spierala/mini-rx-store/edit/master/docs/docs/fs-setup.md",tags:[],version:"current",frontMatter:{id:"fs-setup",title:"Create a Feature Store",sidebar_label:"Setup",slug:"/feature-store-setup"},sidebar:"docs",previous:{title:"Quick Start",permalink:"/docs/fs-quick-start"},next:{title:"Update State",permalink:"/docs/update-feature-state"}},u={},p=[{value:"Option 1: Extend <code>FeatureStore</code>",id:"option-1-extend-featurestore",level:3},{value:"Option 2: Functional creation method",id:"option-2-functional-creation-method",level:3}],l={toc:p};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"There are 2 Options to create a new Feature Store."),(0,o.kt)("h3",{id:"option-1-extend-featurestore"},"Option 1: Extend ",(0,o.kt)("inlineCode",{parentName:"h3"},"FeatureStore")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-feature-store.ts"',title:'"todo-feature-store.ts"'},"import { FeatureStore } from 'mini-rx-store';\nimport { Todo } from './todo';\n\nexport interface TodoState {\n  todos: Todo[];\n  selectedTodoId: number\n}\n\nexport const initialState: TodoState = {\n  todos: [],\n  selectedTodoId: undefined\n};\n\nexport class TodoFeatureStore extends FeatureStore<TodoState> {\n  constructor() {\n    super('todo', initialState)\n  }\n}\n")),(0,o.kt)("p",null,"Extending the ",(0,o.kt)("inlineCode",{parentName:"p"},"FeatureStore")," requires to pass the feature key (e.g. 'todo') and the initial state.\nWe have to provide a TypeScript interface to ",(0,o.kt)("inlineCode",{parentName:"p"},"FeatureStore")," to get type safety: ",(0,o.kt)("inlineCode",{parentName:"p"},"FeatureStore<TodoState>"),"."),(0,o.kt)("h3",{id:"option-2-functional-creation-method"},"Option 2: Functional creation method"),(0,o.kt)("p",null,"We can create a Feature Store with ",(0,o.kt)("inlineCode",{parentName:"p"},"createFeatureStore"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const todoFs: FeatureStore<TodoState> = createFeatureStore<TodoState>('todo', initialState);\n")),(0,o.kt)("p",null,"The following examples will be based on Option 1 (Extend)."))}c.isMDXComponent=!0}}]);