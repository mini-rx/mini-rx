"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[322],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function d(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=o.createContext({}),c=function(e){var t=o.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):d(d({},t),e)),r},u=function(e){var t=c(e.components);return o.createElement(i.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),f=n,m=p["".concat(i,".").concat(f)]||p[f]||l[f]||a;return r?o.createElement(m,d(d({ref:t},u),{},{components:r})):o.createElement(m,d({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,d=new Array(a);d[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,d[1]=s;for(var c=2;c<a;c++)d[c]=r[c];return o.createElement.apply(null,d)}return o.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5770:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>d,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=r(7462),n=(r(7294),r(3905));const a={id:"reducers",title:"Reducers",slug:"/reducers"},d=void 0,s={unversionedId:"reducers",id:"reducers",title:"Reducers",description:"Reducers specify how the feature state changes in response to actions sent to the store.",source:"@site/docs/reducers.md",sourceDirName:".",slug:"/reducers",permalink:"/docs/reducers",draft:!1,editUrl:"https://github.com/spierala/mini-rx-store/edit/master/docs/docs/reducers.md",tags:[],version:"current",frontMatter:{id:"reducers",title:"Reducers",slug:"/reducers"},sidebar:"docs",previous:{title:"Actions",permalink:"/docs/actions"},next:{title:"Selectors",permalink:"/docs/selectors"}},i={},c=[{value:"Register feature reducer",id:"register-feature-reducer",level:3},{value:"Option 1: Store Config",id:"option-1-store-config",level:4},{value:"Option 2: Add feature reducers dynamically",id:"option-2-add-feature-reducers-dynamically",level:4},{value:"Update State",id:"update-state",level:3}],u={toc:c};function l(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Reducers specify how the feature state changes in response to actions sent to the store.\nA reducer function typically looks like this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-reducer.ts"',title:'"todo-reducer.ts"'},"import { Todo } from './todo';\nimport { TodoActionTypes, TodoActions } from './todo-actions';\n\nexport interface TodoState {\n  todos: Todo[];\n  selectedTodoId: number\n}\n\nexport const initialState: TodoState = {\n  todos: [],\n  selectedTodoId: undefined\n};\n\nexport function todoReducer(\n  state: TodoState = initialState,\n  action: TodoActions\n): TodoState {\n  switch (action.type) {\n    case TodoActionTypes.AddTodo:\n      return {\n        ...state,\n        todos: [...state.todos, action.payload]\n      };\n    case TodoActionTypes.RemoveTodo:\n      return {\n        ...state,\n        todos: state.todos.filter(item => item.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n")),(0,n.kt)("h3",{id:"register-feature-reducer"},"Register feature reducer"),(0,n.kt)("p",null,"Before we can update state by dispatching actions, we need to add the reducer to the store.\nThere are two options to register a feature reducer:"),(0,n.kt)("h4",{id:"option-1-store-config"},"Option 1: Store Config"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"import { configureStore, Store } from 'mini-rx-store';\nimport todoReducer from './todo-reducer';\n\nconst store: Store = configureStore({\n  reducers: {\n    todo: todoReducer\n  }\n});\n")),(0,n.kt)("p",null,"Like this, the reducers are ready when the store is initialized."),(0,n.kt)("h4",{id:"option-2-add-feature-reducers-dynamically"},"Option 2: Add feature reducers dynamically"),(0,n.kt)("p",null,"We can add feature reducers at any time with ",(0,n.kt)("inlineCode",{parentName:"p"},"store.feature"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"import todoReducer from './todo-reducer';\n\nstore.feature('todo', todoReducer)\n")),(0,n.kt)("h3",{id:"update-state"},"Update State"),(0,n.kt)("p",null,"Now we are all set for updating the ",(0,n.kt)("em",{parentName:"p"},"todos")," feature state.\nLet's dispatch the ",(0,n.kt)("inlineCode",{parentName:"p"},"AddTodo")," action:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'store.dispatch(new AddTodo({id: 1, title: \'Use Redux\'}));\n\nstore.select(state => state).subscribe(console.log); \n// Output: {"todo":{"todos":[{id: 1, title: "Use Redux"}]}}\n')),(0,n.kt)("p",null,"Yes, we did it! The todoReducer processed the action, and the new todo landed in the ",(0,n.kt)("inlineCode",{parentName:"p"},"todos")," array."))}l.isMDXComponent=!0}}]);