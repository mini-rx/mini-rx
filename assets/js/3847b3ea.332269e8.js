"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[581],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1959:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const i={id:"setup",title:"Setup"},a=void 0,s={unversionedId:"setup",id:"setup",title:"Setup",description:"MiniRx Store requires only a minimum of configuration to get started.",source:"@site/docs/setup.md",sourceDirName:".",slug:"/setup",permalink:"/docs/setup",draft:!1,editUrl:"https://github.com/spierala/mini-rx-store/edit/master/docs/docs/setup.md",tags:[],version:"current",frontMatter:{id:"setup",title:"Setup"},sidebar:"docs",previous:{title:"Installation & TypeScript Config",permalink:"/docs/"},next:{title:"Quick Start",permalink:"/docs/redux"}},l={},u=[{value:"<code>configureStore</code>",id:"configurestore",level:2},{value:"Redux Setup",id:"redux-setup",level:2},{value:"Extensions",id:"extensions",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"MiniRx Store requires only a minimum of configuration to get started."),(0,o.kt)("h2",{id:"configurestore"},(0,o.kt)("inlineCode",{parentName:"h2"},"configureStore")),(0,o.kt)("p",null,"Pass an empty configuration to ",(0,o.kt)("inlineCode",{parentName:"p"},"configureStore")," to get hold of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Store")," instance:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { configureStore, Store } from 'mini-rx-store';\n\nconst store: Store = configureStore({});\n")),(0,o.kt)("p",null,"With the ",(0,o.kt)("inlineCode",{parentName:"p"},"Store")," instance we can already add reducers (dynamically), select state, dispatch actions and create effects."),(0,o.kt)("h2",{id:"redux-setup"},"Redux Setup"),(0,o.kt)("p",null,"Read ",(0,o.kt)("a",{parentName:"p",href:"redux-setup"},'"Redux" Store Setup')," to see the Redux related configuration options."),(0,o.kt)("h2",{id:"extensions"},"Extensions"),(0,o.kt)("p",null,"We can add extensions to the Store config to add additional functionality."),(0,o.kt)("p",null,"Currently, these extensions are included in MiniRx:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Redux DevTools Extension: Inspect state with the Redux DevTools"),(0,o.kt)("li",{parentName:"ul"},"Immutable Extension: Enforce state immutability"),(0,o.kt)("li",{parentName:"ul"},"Undo Extension: Undo dispatched actions"),(0,o.kt)("li",{parentName:"ul"},"Logger Extension: console.log the current action and updated state")),(0,o.kt)("p",null,"Example: Add the LoggerExtension"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { LoggerExtension } from 'mini-rx-store';\n\nconst store: Store = configureStore({\n  extensions: [new LoggerExtension()]\n});\n")))}d.isMDXComponent=!0}}]);