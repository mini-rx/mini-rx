"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[636],{2982:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"fs-select","title":"Select State","description":"Reactive Select","source":"@site/docs/fs-select.md","sourceDirName":".","slug":"/select-feature-state","permalink":"/docs/select-feature-state","draft":false,"unlisted":false,"editUrl":"https://github.com/spierala/mini-rx-store/edit/master/docs/docs/fs-select.md","tags":[],"version":"current","frontMatter":{"id":"fs-select","title":"Select State","sidebar_label":"Select","slug":"select-feature-state"},"sidebar":"docs","previous":{"title":"Connect","permalink":"/docs/connect-feature-state-to-observable"},"next":{"title":"Effects","permalink":"/docs/effects-for-feature-store"}}');var n=s(4848),r=s(8453);const c={id:"fs-select",title:"Select State",sidebar_label:"Select",slug:"select-feature-state"},a=void 0,d={},i=[{value:"Reactive Select",id:"reactive-select",level:2},{value:"Memoized Selectors",id:"memoized-selectors",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"reactive-select",children:"Reactive Select"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="todo-feature-store.ts"',children:"import { Observable } from 'rxjs';\n\ntodos$: Observable<Todo[]> = this.select(state => state.todos);\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"select"})," takes a callback function which gives you access to the current ",(0,n.jsx)(t.strong,{children:"feature state"})," (see the ",(0,n.jsx)(t.code,{children:"state"})," parameter).\nWithin that function you can pick a specific piece of state.\n",(0,n.jsx)(t.code,{children:"select"})," returns an Observable which will emit as soon as the selected state changes."]}),"\n",(0,n.jsx)(t.h2,{id:"memoized-selectors",children:"Memoized Selectors"}),"\n",(0,n.jsxs)(t.p,{children:["You can use memoized selectors also with the Feature Store...\nYou only have to omit the feature key when using ",(0,n.jsx)(t.code,{children:"createFeatureStateSelector"}),".\nThis is because the Feature Store is operating on a specific feature state already\n(the corresponding feature key has been provided in the constructor)."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="todo-feature-store.ts"',children:"import { createFeatureStateSelector, createSelector } from 'mini-rx-store';\n\n// Memoized Selectors\nconst getTodoFeatureState = createFeatureStateSelector<TodoState>(); // Omit the feature key!\n\nconst getTodos = createSelector(\n  getTodoFeatureState,\n  state => state.todos\n);\n\nconst getSelectedTodoId = createSelector(\n  getTodoFeatureState,\n  state => state.selectedTodoId\n)\n\nconst getSelectedTodo = createSelector(\n  getTodos,\n  getSelectedTodoId,\n  (todos, id) => todos.find(item => item.id === id)\n)\n\nclass TodoFeatureStore extends FeatureStore<TodoState> {\n\n  // State Observables\n  todoState$: Observable<TodoState> = this.select(getTodoFeatureState);\n  todos$: Observable<Todo[]> = this.select(getTodos);\n  selectedTodo$: Observable<Todo> = this.select(getSelectedTodo);\n\n  constructor() {\n    super('todoFs', initialState) // Feature key 'todosFs' is provided here already...\n  }\n\n  addTodo(todo: Todo) {\n    this.setState(state => ({\n      todos: [...state.todos, todo]\n    }))\n  }\n\n  selectTodo(id: number) {\n    this.setState({selectedTodoId: id});\n  }\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>a});var o=s(6540);const n={},r=o.createContext(n);function c(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);