{
    "name": "mini-rx-angular-demo",
    "$schema": "../../node_modules/nx/schemas/project-schema.json",
    "projectType": "application",
    "sourceRoot": "apps/mini-rx-angular-demo/src",
    "prefix": "app",
    "tags": ["scope:mini-rx-angular-demo"],
    "targets": {
        "build": {
            "executor": "@angular-devkit/build-angular:browser",
            "outputs": ["{options.outputPath}"],
            "options": {
                "outputPath": "dist/apps/mini-rx-angular-demo",
                "index": "apps/mini-rx-angular-demo/src/index.html",
                "main": "apps/mini-rx-angular-demo/src/main.ts",
                "polyfills": "apps/mini-rx-angular-demo/src/polyfills.ts",
                "tsConfig": "apps/mini-rx-angular-demo/tsconfig.app.json",
                "inlineStyleLanguage": "css",
                "assets": [
                    "apps/mini-rx-angular-demo/src/favicon.ico",
                    "apps/mini-rx-angular-demo/src/assets"
                ],
                "styles": [
                    "apps/mini-rx-angular-demo/src/styles.css",
                    "node_modules/bootstrap/dist/css/bootstrap.css",
                    "node_modules/ngx-toastr/toastr.css"
                ],
                "scripts": []
            },
            "configurations": {
                "production": {
                    "budgets": [
                        {
                            "type": "initial",
                            "maximumWarning": "500kb",
                            "maximumError": "1mb"
                        },
                        {
                            "type": "anyComponentStyle",
                            "maximumWarning": "2kb",
                            "maximumError": "4kb"
                        }
                    ],
                    "fileReplacements": [
                        {
                            "replace": "apps/mini-rx-angular-demo/src/environments/environment.ts",
                            "with": "apps/mini-rx-angular-demo/src/environments/environment.prod.ts"
                        }
                    ],
                    "outputHashing": "all"
                },
                "development": {
                    "buildOptimizer": false,
                    "optimization": false,
                    "vendorChunk": true,
                    "extractLicenses": false,
                    "sourceMap": true,
                    "namedChunks": true
                }
            },
            "defaultConfiguration": "production"
        },
        "serve": {
            "executor": "@angular-devkit/build-angular:dev-server",
            "configurations": {
                "production": {
                    "buildTarget": "mini-rx-angular-demo:build:production"
                },
                "development": {
                    "buildTarget": "mini-rx-angular-demo:build:development"
                }
            },
            "defaultConfiguration": "development"
        },
        "extract-i18n": {
            "executor": "@angular-devkit/build-angular:extract-i18n",
            "options": {
                "buildTarget": "mini-rx-angular-demo:build"
            }
        },
        "lint": {
            "executor": "@nx/eslint:lint"
        },
        "test": {
            "executor": "@nx/jest:jest",
            "outputs": ["{workspaceRoot}/coverage/apps/mini-rx-angular-demo"],
            "options": {
                "jestConfig": "apps/mini-rx-angular-demo/jest.config.ts"
            }
        },
        "serveAppAndWatchLibs": {
            "executor": "nx:run-commands",
            "options": {
                "commands": [
                    {
                        "command": "nx build common --watch"
                    },
                    {
                        "command": "nx build mini-rx-store --watch"
                    },
                    {
                        "command": "nx build mini-rx-store-ng --watch"
                    },
                    {
                        "command": "nx serve"
                    }
                ]
            }
        }
    }
}
